USE RESTO
GO

-- QUERY DE LOS USUARIOS
	SELECT 
		ID_USUARIO, 
		NOMBRE_USUARIO, 
		CONTRASENA, 
		TIPO,
		URL_IMAGEN, 
		ESTADO
	FROM USUARIOS U 
	LEFT JOIN IMAGENES I ON I.ID_IMAGEN = U.ID_IMAGEN

-- QUERY DE LOS MESEROS
	SELECT 
		ID_MESERO,
		ID_USUARIO, 
		DNI, 
		NOMBRE, 
		APELLIDO,
		TELEFONO, 
		DIRECCION,
		FECHA_NACIMIENTO,
		MAIL,
		ESTADO
	FROM MESEROS U 

-- QUERY DE LOS ADM
	SELECT 
		ID_ADMINISTRADOR,
		ID_USUARIO, 
		DNI, 
		NOMBRE, 
		APELLIDO,
		TELEFONO, 
		DIRECCION,
		FECHA_NACIMIENTO,
		MAIL,
		ESTADO
	FROM ADMINISTRADOR U 

-- QUERY DE LAS MESAS
SELECT 
	ID_MESA,
	ID_MESERO,
	ID_ADMIN,
	CAPACIDAD,
	COMENSALES_SENTADOS,
	ESTADO
FROM MESAS M

-- INSERT DE UNA IMAGEN
INSERT INTO IMAGENES(URL_IMAGEN) VALUES (@URL)
UPDATE USUARIOS SET ID_IMAGEN = (SELECT MAX(ID_IMAGEN) FROM IMAGENES) WHERE ID_USUARIO = @IDUSUARIO

-- UPDATE DE MESA
UPDATE MESAS SET COMENSALES_SENTADOS = COMENSALES_SENTADOS+1 WHERE ID_MESA = 1

--PROCEDURE BUSQUEDA DE ELEMENTOS
CREATE PROCEDURE SP_LISTAR_STOCK
AS
BEGIN
    SELECT 
        S.ID_PRODUCTO,
        S.NOMBRE AS NOMBRE_P,
        T.NOMBRE AS NOMBRE_T,
        S.CANTIDAD,
        S.URLIMAGEN,
        S.PRECIO,
        N.NOMBRE AS NOMBRE_U
    FROM 
        STOCKCARTA S
    INNER JOIN 
        UNIDADMEDIDA N ON S.ID_UNIDAD = N.ID_UNIDAD
    INNER JOIN 
        TIPOITEM T ON S.ID_TIPO = T.ID_TIPO;
END;

--PROCEDURE ACTUALIZACION DE STOCK
CREATE PROCEDURE SP_ACTUALIZACION_ITEM
    @ID_PRODUCTO INT, 
    @NOMBREPRODUCTO VARCHAR(50),
    @ID_TIPO INT,
    @ID_UNIDAD INT,
    @CANTIDAD INT, 
    @PRECIO MONEY,
    @URLIMAGEN VARCHAR(300)
AS 
BEGIN 
    BEGIN TRANSACTION;
    BEGIN TRY 
        UPDATE STOCKCARTA
        SET 
            NOMBRE = @NOMBREPRODUCTO,
            ID_TIPO = @ID_TIPO,
            ID_UNIDAD = @ID_UNIDAD, 
            CANTIDAD = @CANTIDAD,
            PRECIO = @PRECIO,
            URLIMAGEN = @URLIMAGEN
        WHERE ID_PRODUCTO = @ID_PRODUCTO AND ESTADO = 1;

       
        COMMIT TRANSACTION;
    END TRY 
    BEGIN CATCH 
       
        ROLLBACK TRANSACTION;
        
       
        RAISERROR('NO PUDO REALIZARSE EL MOVIMIENTO', 16, 1);
    END CATCH 
END;

