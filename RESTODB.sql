-- ELIMINAR BASE DE DATOS
	USE master
	DROP DATABASE RESTO
	GO
	USE MASTER
	GO

-- CREACION DE LA BASE DE DATOS
	CREATE DATABASE RESTO
	GO
	USE RESTO
	GO

-- CREACION DE TABLAS
CREATE TABLE IMAGENES(
	ID_IMAGEN INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	URL_IMAGEN VARCHAR(200) NULL
)
GO
CREATE TABLE USUARIOS (
    ID_USUARIO INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    NOMBRE_USUARIO VARCHAR(50) UNIQUE NOT NULL,
    CONTRASENA VARCHAR(30) NOT NULL,
    TIPO VARCHAR(20) NOT NULL CHECK (TIPO IN ('Administrador', 'Mesero')),
	ID_IMAGEN INT NULL,
	FOREIGN KEY (ID_IMAGEN) REFERENCES IMAGENES(ID_IMAGEN),
	ESTADO BIT NOT NULL DEFAULT(1)
)
GO
CREATE TABLE MESEROS (
    ID_MESERO INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	ID_USUARIO INT NULL,
	DNI VARCHAR(10) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO VARCHAR(100) NOT NULL,
    TELEFONO VARCHAR(15) NOT NULL,
    DIRECCION VARCHAR(100) NOT NULL,
    FECHA_NACIMIENTO DATE NOT NULL CHECK(FECHA_NACIMIENTO <= GETDATE()),
    MAIL VARCHAR(50) UNIQUE NOT NULL,
    ESTADO BIT DEFAULT(1) NOT NULL,
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO)
)
GO
CREATE TABLE ADMINISTRADOR (
    ID_ADMINISTRADOR INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	ID_USUARIO INT NOT NULL,
	DNI VARCHAR(10) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO VARCHAR(100) NOT NULL,
    TELEFONO VARCHAR(15) NOT NULL,
    DIRECCION VARCHAR(100) NOT NULL,
    FECHA_NACIMIENTO DATE NOT NULL CHECK(FECHA_NACIMIENTO <= GETDATE()),
    MAIL VARCHAR(50) UNIQUE NOT NULL,
    ESTADO BIT DEFAULT(1) NOT NULL,
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO)
)
GO
CREATE TABLE MESAS (
    ID_MESA INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	ID_MESERO INT NOT NULL,
	ID_ADMIN INT NOT NULL,
	CAPACIDAD INT NOT NULL,
	COMENSALES_SENTADOS INT NULL,
	ESTADO BIT DEFAULT (1) NOT NULL,
	FOREIGN KEY (ID_MESERO) REFERENCES MESEROS(ID_MESERO),
	FOREIGN KEY (ID_ADMIN) REFERENCES ADMINISTRADOR(ID_ADMINISTRADOR)
)
GO
CREATE TABLE JORNADAS(
    ID_JORNADA INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	FECHA DATE NOT NULL,
	HORA_INICIO TIME NOT NULL,
	HORA_FIN TIME,
)
CREATE TABLE TIPOITEM(
ID_TIPO INT NOT NULL PRIMARY KEY IDENTITY (1,1),
NOMBRE VARCHAR(50) NOT NULL, 
ESTADO BIT,
)

CREATE TABLE UNIDADMEDIDA(
ID_UNIDAD INT NOT NULL PRIMARY KEY IDENTITY (1,1),
NOMBRE VARCHAR(50) NOT NULL,
ESTADO BIT,
)

CREATE TABLE STOCKCARTA (
    ID_PRODUCTO INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    ID_TIPO INT NOT NULL,
    ID_UNIDAD INT NOT NULL,
    CANTIDAD INT NOT NULL CHECK (CANTIDAD >=0),
    NOMBRE VARCHAR(50) NOT NULL,
    PRECIO DECIMAL (18,2) NOT NULL CHECK (PRECIO >= 0),
	ESTADO BIT, 
    URLIMAGEN VARCHAR(300) NULL,
    CONSTRAINT FK_STOCKCARTA_UNIDADES FOREIGN KEY (ID_UNIDAD) REFERENCES UNIDADMEDIDA(ID_UNIDAD),
    CONSTRAINT FK_ID_TIPO_TIPOITEM FOREIGN KEY (ID_TIPO) REFERENCES TIPOITEM(ID_TIPO)
);

CREATE TABLE VENTA(
ID_VENTA INT PRIMARY KEY IDENTITY (1,1),
FECHA DATE NOT NULL,
IMPORTE DECIMAL (18,2),
CHECK (IMPORTE >= 0)
)

CREATE TABLE DETALLEVENTA (
    ID_DETALLEVENTA INT PRIMARY KEY IDENTITY (1,1),
    ID_VENTA INT NOT NULL, 
    ID_PRODUCTO INT NOT NULL, 
    CANTIDAD INT NOT NULL CHECK (CANTIDAD >= 0),
    CONSTRAINT FK_DETALLEVENTA_VENTA FOREIGN KEY (ID_VENTA) REFERENCES VENTA (ID_VENTA),
    CONSTRAINT FK_DETALLEVENTA_STOCKCARTA FOREIGN KEY (ID_PRODUCTO) REFERENCES STOCKCARTA (ID_PRODUCTO)
);

-- INSERTS CON INFORMACIÓN PARA CADA TABLA

INSERT INTO TIPOITEM (NOMBRE, ESTADO) VALUES 
('BEBIDAS',1),
('VERDURA',1),
('CARNE',1),
('POSTRE',1)

---------------------

INSERT INTO UNIDADMEDIDA (NOMBRE, ESTADO) VALUES 
('Lts',1),
('KG',1),
('UN',1),
('ARS',1);

---------------------

INSERT INTO STOCKCARTA (ID_TIPO, CANTIDAD, NOMBRE, PRECIO, ID_UNIDAD, ESTADO) VALUES 
(1, 10,'COCACOLA', 2200, 3, 1),
(1, 10, 'CERVEZA', 3000, 3, 1),
(1, 10, 'LIMALIMON', 2200, 3, 1),
(1, 10, 'NARNAJA', 2200, 3, 1),
(2, 10, 'CEBOLLA', 1500, 2, 1),
(2, 10, 'MORRRON', 3000, 2, 1),
(2, 10, 'PAPA', 2200, 2, 1),
(3, 10, 'CERDO', 1500, 2, 1),
(3, 10, 'POLLO', 3000, 2, 1),
(3, 10, 'VACA', 2200, 2, 1);


---------------------

INSERT INTO JORNADAS (FECHA, HORA_INICIO, HORA_FIN) VALUES
('2024-06-20', '08:00:00', '17:00:00'),
('2024-06-21', '08:30:00', '17:30:00'),
('2024-06-22', '07:45:00', '16:45:00'),
('2024-06-23', '09:00:00', '18:00:00'),
('2024-06-24', '08:15:00', '17:15:00'),
('2024-06-25', '08:00:00', '16:30:00'),
('2024-06-26', '07:30:00', '16:00:00'),
('2024-06-27', '08:45:00', '17:45:00'),
('2024-06-28', '09:30:00', '18:30:00'),
('2024-06-29', '08:00:00', '17:00:00');


---------------------

INSERT INTO USUARIOS (NOMBRE_USUARIO, CONTRASENA, TIPO) 
VALUES ('Sofia', '123', 'Mesero'), -- Usuarios de los meseros
       ('Gabriel', '123', 'Mesero'),
       ('Laura', '123', 'Mesero'),
       ('Martin', '123', 'Mesero'),
	   ('Alejandro', '123', 'Mesero'),
	   ('Admin1', '123', 'Administrador') -- Administrador

---------------------

INSERT INTO ADMINISTRADOR (ID_USUARIO, DNI, NOMBRE, APELLIDO, TELEFONO, DIRECCION, FECHA_NACIMIENTO, MAIL, ESTADO)
VALUES  (6, '122222789', 'Carlos', 'González', '1541234567', 'Av. Principal 123', '1980-04-12', 'carlos.gonzalez@email.com', 1)

---------------------

INSERT INTO MESEROS (ID_USUARIO, DNI, NOMBRE, APELLIDO, TELEFONO, DIRECCION, FECHA_NACIMIENTO, MAIL, ESTADO)
VALUES (1, '11111111', 'Mesero1', 'Apellido1', '1234567891', 'Dirección1', '1990-01-01', 'mesero1@mail.com', 1),
       (2, '11222222','Mesero2', 'Apellido2', '1234567892', 'Dirección2', '1990-02-02', 'mesero2@mail.com', 1),
       (3, '11333333','Mesero3', 'Apellido3', '1234567893', 'Dirección3', '1990-03-03', 'mesero3@mail.com', 1),
       (4, '11444444','Mesero4', 'Apellido4', '1234567894', 'Dirección4', '1990-04-04', 'mesero4@mail.com', 1)

---------------------

INSERT INTO MESAS (ID_MESERO, ID_ADMIN, CAPACIDAD, COMENSALES_SENTADOS, ESTADO)
VALUES  (1, 1, 4, 0, 1),
		(2, 1, 6, 2, 1),
		(3, 1, 2, 1, 1),
		(4, 1, 8, 4, 1),
		(1, 1, 4, 2, 1),
		(2, 1, 4, 3, 1),
		(3, 1, 6, 0, 1),
		(4, 1, 2, 0, 1),
		(1, 1, 6, 5, 1),
		(2, 1, 8, 6, 1),
		(3, 1, 4, 1, 1),
		(4, 1, 4, 3, 1),
		(1, 1, 8, 7, 1),
		(2, 1, 2, 0, 1),
		(3, 1, 6, 2, 1)


--PROCEDURE BUSQUEDA DE ELEMENTOS

CREATE PROCEDURE SP_LISTAR_STOCK
AS
BEGIN
    SELECT 
        S.ID_PRODUCTO,
        S.NOMBRE AS NOMBRE_P,
        T.NOMBRE AS NOMBRE_T,
        S.CANTIDAD,
        S.URLIMAGEN,
        S.PRECIO,
        N.NOMBRE AS NOMBRE_U
    FROM 
        STOCKCARTA S
    INNER JOIN 
        UNIDADMEDIDA N ON S.ID_UNIDAD = N.ID_UNIDAD
    INNER JOIN 
        TIPOITEM T ON S.ID_TIPO = T.ID_TIPO;
END;

--PROCEDURE ACTUALIZACION DE STOCK
CREATE PROCEDURE SP_ACTUALIZACION_ITEM
    @ID_PRODUCTO INT, 
    @NOMBREPRODUCTO VARCHAR(50),
    @ID_TIPO INT,
    @ID_UNIDAD INT,
    @CANTIDAD INT, 
    @PRECIO MONEY,
    @URLIMAGEN VARCHAR(300)
AS 
BEGIN 
    BEGIN TRANSACTION;
    BEGIN TRY 
        UPDATE STOCKCARTA
        SET 
            NOMBRE = @NOMBREPRODUCTO,
            ID_TIPO = @ID_TIPO,
            ID_UNIDAD = @ID_UNIDAD, 
            CANTIDAD = @CANTIDAD,
            PRECIO = @PRECIO,
            URLIMAGEN = @URLIMAGEN
        WHERE ID_PRODUCTO = @ID_PRODUCTO AND ESTADO = 1;

       
        COMMIT TRANSACTION;
    END TRY 
    BEGIN CATCH 
       
        ROLLBACK TRANSACTION;
        
       
        RAISERROR('NO PUDO REALIZARSE EL MOVIMIENTO', 16, 1);
    END CATCH 
END;


--PROCEDURE ELIMINAR ITEM DE TABLA STOCK 

CREATE PROCEDURE SP_ELIMINAR_ITEM_STOCK 
@ID_PRODUCTO INT
AS 
BEGIN 
BEGIN TRY 
DELETE FROM STOCKCARTA WHERE ID_PRODUCTO = @ID_PRODUCTO;
END TRY
BEGIN CATCH 
RAISERROR('No se pudo borrar el elemento',16,1);
END CATCH 
END;


--PROCEDURE AGREGAR ELEMENTO A LA LISTA DE STOCK 

CREATE PROCEDURE SP_AGREGAR_ITEM 
  @ID_TIPO INT,
   @CANTIDAD INT,
     @NOMBREPRODUCTO VARCHAR(50),
   @PRECIO MONEY,
      @ID_UNIDAD INT,
      @URLIMAGEN VARCHAR(300)
    

AS
BEGIN
BEGIN TRY 
INSERT INTO STOCKCARTA (ID_TIPO, CANTIDAD, NOMBRE, PRECIO, ID_UNIDAD,URLIMAGEN, ESTADO) VALUES 
(@ID_TIPO,@CANTIDAD, @NOMBREPRODUCTO,@PRECIO, @ID_UNIDAD, @URLIMAGEN, 1)
END TRY 
BEGIN CATCH 
RAISERROR('No pudo agregarse el item', 16, 1);
END CATCH
END;